{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","console","log","_this2","_this$props$contact","name","email","phone","titleStyle","contactInfo","className","join","style","cursor","onClick","float","Link","to","color","marginRight","Contacts","react","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","event","_this$state","newErrors","newContact","preventDefault","test","keys","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","res","match","params","put","Header","branding","href","data-toggle","data-target","About","NotFound","Test","fetch","then","json","App","context_Provider","BrowserRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d93b44b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      }\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      }\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => {\r\n          return contact.id === action.payload.id ? action.payload : contact;\r\n        })\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await axios.get('http://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: response.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state} >\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = e => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  onDeleteClick = async (dispatch, id) => {\r\n    try {\r\n      await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({\r\n        type: \"DELETE_CONTACT\",\r\n        payload: id\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const titleStyle = this.state.showContactInfo\r\n      ? [\"fas\", \"ml-2\", \"fa-sort-up\"]\r\n      : [\"fas\", \"ml-2\", \"fa-sort-down\"];\r\n    const contactInfo = this.state.showContactInfo ? (\r\n      <ul className=\"list-group\">\r\n        <li className=\"list-group-item\">Email: {email} </li>\r\n        <li className=\"list-group-item\">Phone: {phone} </li>\r\n      </ul>\r\n    ) : null;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4 className=\"card-title\">\r\n                {name}\r\n                <i\r\n                  className={titleStyle.join(\" \")}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={this.onShowClick}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times text-danger\"\r\n                  style={{ cursor: \"pointer\", float: \"right\" }}\r\n                  onClick={() => this.onDeleteClick(dispatch, id)}\r\n                />\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                      float: \"right\",\r\n                      cursor: \"pointer\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {contactInfo}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component, Fragment } from 'react'\r\nimport Contact from './Contact'\r\n\r\nimport { Consumer } from '../../context'\r\n\r\nexport class Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer >\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className='text-danger'>Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                />\r\n              ))}\r\n            </Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n  type,\r\n  label,\r\n  id,\r\n  value,\r\n  placeholder,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={id}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error,\r\n        })}\r\n        placeholder={placeholder}\r\n        id={id}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error ? <div className=\"invalid-feedback\">{error}</div> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  error: PropTypes.object,\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text',\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  }\r\n\r\n  onSubmit = async (event, dispatch) => {\r\n    event.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // validate the form contents\r\n    let newErrors = {};\r\n    if (name === '') {\r\n      newErrors = {\r\n        ...newErrors,\r\n        name: 'Name is Required'\r\n      }\r\n    }\r\n\r\n    if (email === '') {\r\n      newErrors = {\r\n        ...newErrors,\r\n        email: 'Email is Required'\r\n      }\r\n    } else if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n      newErrors = {\r\n        ...newErrors,\r\n        email: 'Please input a valid email address'\r\n      }\r\n    }\r\n\r\n    if (phone === '') {\r\n      newErrors = {\r\n        ...newErrors,\r\n        phone: 'Phone is Required'\r\n      }\r\n    } else if (!/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/g.test(phone)) {\r\n      newErrors = {\r\n        ...newErrors,\r\n        phone: 'Please input a valid phone number'\r\n      }\r\n    }\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      this.setState({ errors: newErrors });\r\n      return;\r\n    }\r\n\r\n\r\n    // update contact in state\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    }\r\n\r\n    const response = await axios.post('http://jsonplaceholder.typicode.com/users', newContact)\r\n\r\n    dispatch({\r\n      type: 'ADD_CONTACT',\r\n      payload: response.data,\r\n    })\r\n\r\n    // clear the form\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    })\r\n\r\n    // go to main page to see the result\r\n    this.props.history.push('/');\r\n  }\r\n\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className=\"card-header\">\r\n                <h3>Add Contact</h3>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={(event) => this.onSubmit(event, dispatch)}>\r\n                  <TextInputGroup\r\n                    id='name'\r\n                    label='Name'\r\n                    placeholder='Enter Name...'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    id='email'\r\n                    label='Email'\r\n                    placeholder='Enter Email...'\r\n                    type='email'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    id='phone'\r\n                    label='Phone'\r\n                    placeholder='Enter Phone...'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-danger btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `http://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const { name, email, phone } = res.data;\r\n    this.setState({\r\n      name,\r\n      email,\r\n      phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (event, dispatch) => {\r\n    event.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // validate the form contents\r\n    let newErrors = {};\r\n    if (name === \"\") {\r\n      newErrors = {\r\n        ...newErrors,\r\n        name: \"Name is Required\"\r\n      };\r\n    }\r\n\r\n    if (email === \"\") {\r\n      newErrors = {\r\n        ...newErrors,\r\n        email: \"Email is Required\"\r\n      };\r\n    } else if (\r\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n        email\r\n      )\r\n    ) {\r\n      newErrors = {\r\n        ...newErrors,\r\n        email: \"Please input a valid email address\"\r\n      };\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      newErrors = {\r\n        ...newErrors,\r\n        phone: \"Phone is Required\"\r\n      };\r\n    } else if (\r\n      !/^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/g.test(phone)\r\n    ) {\r\n      newErrors = {\r\n        ...newErrors,\r\n        phone: \"Please input a valid phone number\"\r\n      };\r\n    }\r\n\r\n    if (Object.keys(newErrors).length > 0) {\r\n      this.setState({ errors: newErrors });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(`http://jsonplaceholder.typicode.com/users/${id}`, {\r\n      name,\r\n      email,\r\n      phone,\r\n    })\r\n\r\n    dispatch({\r\n      type: 'UPDATE_CONTACT',\r\n      payload: res.data,\r\n    })\r\n\r\n    // clear the form\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    // go to main page to see the result\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">\r\n                <h3>Edit Contact</h3>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={event => this.onSubmit(event, dispatch)}>\r\n                  <TextInputGroup\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    id=\"phone\"\r\n                    label=\"Phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Edit Contact\"\r\n                    className=\"btn btn-danger btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-sm bg-danger navbar-dark mb-3\">\r\n        <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n          <button className=\"navbar-toggler\" data-toggle='collapse' data-target='#navbarCollapse'>\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"navbar-collapse collapse\" id=\"navbarCollapse\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                  <i className=\"fas fa-home mr-1\"></i>\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                  <i className=\"fas fa-plus mr-1\"></i>\r\n                  Add</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\">\r\n                  <i className=\"fas fa-question mr-1\"></i>\r\n                  About</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manger</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className='text-danger'>404</span> Page Not Found</h1>\r\n      <p className=\"lead\">This Page does not Exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class Test extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        name: data.name,\r\n        email: data.email,\r\n      }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test\r\n","import React, { Component } from 'react';\r\nimport Contacts from './components/contacts/Contacts';\r\nimport AddContact from './components/contacts/AddContact'\r\nimport EditContact from './components/contacts/EditContact'\r\nimport Header from './components/layout/Header';\r\nimport About from './components/pages/About'\r\nimport NotFound from './components/pages/NotFound'\r\nimport Test from './components/test/Test'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport { Provider } from './context'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header branding='Contact Manager' />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path='/' component={Contacts} />\r\n                <Route exact path='/contact/add' component={AddContact} />\r\n                <Route exact path='/contact/edit/:id' component={EditContact} />\r\n                <Route exact path='/about' component={About} />\r\n                <Route exact path='/test' component={Test} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import $ from 'jquery';\r\n// import Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}